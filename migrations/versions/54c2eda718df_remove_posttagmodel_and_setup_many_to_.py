"""remove PostTagModel and setup many-to-many rel with
'posts' and 'tags' tables with sqlalchemy

Revision ID: 54c2eda718df
Revises: 2eb9cd74e3c7
Create Date: 2023-09-14 23:17:40.075560

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "54c2eda718df"
down_revision: str | None = "2eb9cd74e3c7"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "association_table",
        sa.Column(
            "post_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.Column(
            "tag_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["post_id"], ["posts.id"]),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"]),
        sa.PrimaryKeyConstraint("post_id", "tag_id"),
    )
    op.drop_table("post_tags_relationship_model")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "post_tags_relationship_model",
        sa.Column("post_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="post_tags_relationship_model_pkey"),
    )
    op.drop_table("association_table")
    # ### end Alembic commands ###
