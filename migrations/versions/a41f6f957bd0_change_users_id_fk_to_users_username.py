"""change users.id fk to users.username

Revision ID: a41f6f957bd0
Revises: b7b67548bec8
Create Date: 2023-09-28 15:26:24.648434

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "a41f6f957bd0"
down_revision: str | None = "b7b67548bec8"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("comments_user_id_fkey", "comments", type_="foreignkey")
    op.drop_column("comments", "user_id")
    op.add_column("drafts", sa.Column("username", sa.String(), nullable=False))
    op.drop_constraint("drafts_user_id_fkey", "drafts", type_="foreignkey")
    op.create_foreign_key(None, "drafts", "users", ["username"], ["username"])
    op.drop_column("drafts", "user_id")
    op.add_column("posts", sa.Column("username", sa.String(), nullable=True))
    op.drop_constraint("posts_user_id_fkey", "posts", type_="foreignkey")
    op.create_foreign_key(None, "posts", "users", ["username"], ["username"])
    op.drop_column("posts", "user_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "posts",
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "posts", type_="foreignkey")
    op.create_foreign_key("posts_user_id_fkey", "posts", "users", ["user_id"], ["id"])
    op.drop_column("posts", "username")
    op.add_column(
        "drafts",
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "drafts", type_="foreignkey")
    op.create_foreign_key("drafts_user_id_fkey", "drafts", "users", ["user_id"], ["id"])
    op.drop_column("drafts", "username")
    op.add_column(
        "comments",
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "comments_user_id_fkey",
        "comments",
        "users",
        ["user_id"],
        ["id"],
    )
    # ### end Alembic commands ###
